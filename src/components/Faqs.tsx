import React, { useEffect } from "react";
import { useInView } from "react-intersection-observer";
import { motion, useAnimation } from "framer-motion";
import FaqsImage from "../assets/img/faqs.png";
import SearchIcon from "../assets/img/search.png";
import { Accordion, Image } from "@mantine/core";

const FAQsPage: React.FC = () => {
  const { ref: imageRef, inView: imageInView } = useInView({ threshold: 0.5 });
  const { ref: contentRef, inView: contentInView } = useInView({
    threshold: 0.5,
  });

  const imageControls = useAnimation();
  const contentControls = useAnimation();

  useEffect(() => {
    if (imageInView) {
      imageControls.start({ opacity: 1, x: 0, transition: { duration: 1 } });
    }
  }, [imageControls, imageInView]);

  useEffect(() => {
    if (contentInView) {
      contentControls.start({ opacity: 1, x: 0, transition: { duration: 1 } });
    }
  }, [contentControls, contentInView]);

  const faqs = [
    {
      question: "How are shipment quotes generated?",
      answer:
        "Quotes are generated by an algorithm that accounts for variations in distance and travel time.",
    },
    {
      question: "How are rates determined for shipping services?",
      answer:
        "Rates are determined based on factors such as shipment distance, size, weight, market demand, fuel costs, and carrier availability.",
    },
    {
      question:
        "What should I do if I have an issue after normal business hours?",
      answer:
        "Freight Broker is here to help you resolve issues no matter the time of day. Solution oriented, Friendly Agents and dispatchers. We provide individualized, personal focused transportation service.",
    },
    {
      question: "How many loads per day does Poseidon Freight move?",
      answer:
        "We can help match you with over 10,000 loads per day from more than 14,000 shippers in our network. Our wide range of equipment ensures that we are well equipped to handle shipment of all shapes and sizes. Poseidon is your quality direct delivery carrier.",
    },
  ];

  const items = faqs.map((item) => (
    <Accordion.Item key={item.question} value={item.question}>
      <Accordion.Control
        className="font-medium text-white hover:text-rblue mb-2 "
        classNames={{
          chevron: "text-white hover:text-rblue focus:text-white", // Style for the arrow (chevron)
        }}
      >
        <QuestionComponent question={item.question} />
      </Accordion.Control>
      <Accordion.Panel className="text-gray-400  md:text-md lg:text-xl text-lg font-normal mb-2 text-justify ">
        {item.answer}
      </Accordion.Panel>
    </Accordion.Item>
  ));

  return (
    <div className="relative w-full h-auto">
      {/* Background color half-covering the container */}
      <div className="absolute inset-0 w-full h-full">
        <div className="h-full w-full bg-darkBlue"></div>
      </div>
      <img
        src={SearchIcon}
        alt="Questionmark-blue"
        className="shadow-lg h-auto object-cover rounded-l-3xl absolute -top-10 z-30"
        style={{ right: "0" }}
      />
      <div className="relative flex flex-col lg:flex-row px-8 lg:px-24 py-12 lg:pt-24 lg:pb-12 gap-8 justify-center">
        {/* Image section */}
        <motion.div
          ref={imageRef}
          initial={{ opacity: 0, x: -20 }}
          animate={imageControls}
          className="w-full lg:w-1/4"
        >
            <div className="md:flex hidden flex-col items-start w-3/4">
            <Image src={FaqsImage} alt="FAQs" className="rounded-lg  object-cover" />
            </div>
        </motion.div>

        {/* Content/Accordion section */}
        <motion.div
          ref={contentRef}
          initial={{ opacity: 0, x: 20 }}
          animate={contentControls}
          className="w-full lg:w-1/2 md:p-10"
        >
          <div className="flex flex-col justify-center">
            <h1 className="text-5xl text-yellow-500">FAQs</h1>
            <Accordion
              radius="xs"
              defaultValue="How are shipment quotes generated?"
              w={"100%"}
              className="text-white"
            >
              {items}
            </Accordion>
          </div>
        </motion.div>
      </div>
    </div>
  );
};

function QuestionComponent({ question }: { question: string }) {
  return (
    <p className="xs:text-md md:text-3xl lg:text-2xl text-white hover:text-rblue focus:text-white">
      {question}
    </p>
  );
}

export default FAQsPage;
